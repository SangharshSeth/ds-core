services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    env_file:
      - .env.development
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    mem_limit: 512m
    cpus: 0.5
  postgres:
    image: postgres:17
    env_file:
      - .env.development
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sangharsh", "-d", "dev_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data    
  redis:
    image: redis:8
    ports:
      - "6379:6379"
    env_file:
      - .env.development
    command: ["sh", "-c", "redis-server --requirepass $$REDIS_PASSWORD"]
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli --no-auth-warning -a $$REDIS_PASSWORD ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - private
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env.development
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  private:
    internal: true
  public:
    internal: false